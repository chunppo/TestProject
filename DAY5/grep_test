#!/bin/bash

# grep_test
# grep : 정규 표현식을 사용한 검색을 위한 유틸리티

# 0. 파일 준비
# ls /bin > grep1.txt
# ls /usr/bin > grep2.txt

# 1. 기본 모양
# grep 'zip a' grep1.txt	# 공백이 있다면 ''혹은 ""로 검색 문자열을 묶어야 한다.
# grep 'zip' grep*

# 2. 다양한 옵션 - 244페이지
# grep -l 'zip' grep*	# zip이 있는 파일 이름만 출력

# 3. 정규 표현식
# 메타 문자와 리터널
# 메타 문자의 종류 : ^ $ . [ ] { } - ? * + ( ) | \
# echo "------------"
# grep -h 'zip' grep2.txt

# echo "------------"
# grep -h '.zip' grep2.txt	# . : 임의의 한글자, 단 반드시 한글자가 있어야한다.

# echo "------------"
# grep -h '\.zip' grep2.txt	# '\.' 메타 문자가 아닌 '.' 이라는 문자로 처리

# 앵커 (^ 와 $)
# grep -h '^zip' grep*.txt 	# ^ : 제일 앞에 있는 요소가 'zip' 라인

# grep -h 'zip$' grep*.txt	# $ : 제일 끝에 있는 요소가 'zip' 라인

# grep -h '^zip$' grep*.txt	# ^ $ : 처음과 끝에 있는 요소가 'zip' 라인

# grep -n '^$' grep*	# ^$ 빈문자열(공백) 찾기

# 단어 찾기 게임(행맨)	'.e...'
# grep -h -i '^.e.p..' /usr/share/dict/words	# words는 영어 단어가 있는 텍스트 파일

# [] 와 문자 클래스
# grep -h '[bg]zip' grep*

# grep -h '[^bg]zip' grep*.txt
# echo '---------------------'
# grep -h '^[bg]zip' grep*.txt

# 문자의 시작이 대문자로 되어 있는 문자열 찾기
# grep -h '^[A-Z]' grep*.txt
# echo '---------------------'
# grep -h '^[0-9]' grep*.txt

# grep -h '^[[:upper:]]' grep*.txt

# grep -h '^[[:upper:][:lower:]]' grep*.txt

# 여기까지가 기본 정규 표현식 (BRE) : . ^ $ [] , 문자클래스

# 확장 정규 표현식 (ERE) : | () {}

# grep -h zip|ers grep*.txt	# error. | 파이프라인으로 해석
# grep -h 'zip|ers' grep*.txt	# error 발생안함 : 기본 정규 표현식만 가능함 BRE만 가능

# grep -h -E 'zip|ers' grep*.txt	# ERE를 사용하기 위해서는 -E 옵션이 필요함

# egrep -h 'zip|ers' grep*.txt	# ERE를 사용하기 위해서는 egrep으로도 가능함

# 앞단어가 bz, gz, zip 중에 하나로 시작하는 문자열을 찾아라.. (egrep 사용)

# egrep -h '^bz|gz|zip' grep*.txt	# bz만 첫단어로 해석

# egrep -h '^(bz|gz|zip)' grep*.txt	# 첫단어를 그룹핑함

####### ? * + 메타 문자
# egrep -h '[0-9]' phone.txt
# egrep -h '[0-9]-' phone.txt	# 숫자 한개와 - 포함된 문자
# egrep -h '[0-9]-?' phone.txt	# ? : 앞의 단어가 하나 있거나 또는 없거나
# egrep -h '\-[0-9]' phone.txt	# -와 숫자 한개
# egrep -h '\-[0-9]$' phone.txt	# -와 숫자 한개만 있는 문자' [끝]
# egrep -h '\-[0-9]?$' phone.txt	# -, 숫자 한개가 있거나 없거나 [끝]
# egrep -h '\-[0-9]*$' phone.txt	# -, 숫자 없거나 숫자가 한개  있거나 없거나 [끝]
# egrep -h '\-[0-9]*$' phone.txt	# -, 숫자 없거나 여러번 있거나 [끝]
# egrep -h '\-[0-9]+$' phone.txt		# -, 숫자가 한번 있거나 여러번 있거나, [끝]

# ? : 앞의 문자가 한번 있거나 없을때
# * : 앞의 문자가 여러번 있거나 없을때
# + : 앞의 문자가 한번 있거나 여러번 있을때

# 전화번호 찾기
# egrep -h '^[0-9][0-9][0-9][0-9]-[0-9][0-9][0-9][0-9]$' phone.txt	# 0000-0000

# egrep -h '^[0-9][0-9][0-9][0-9]-?[0-9][0-9][0-9][0-9]$' phone.txt	# 0000-0000, 00000000
# egrep -h '^[0-9][0-9][0-9][0-9] [0-9][0-9][0-9][0-9]$' phone.txt	# 0000 0000
# egrep -h '^[0-9][0-9][0-9][0-9] *[0-9][0-9][0-9][0-9]$' phone.txt	# 0000 0000, 00000000, 0000    0000
# egrep -h '^[0-9][0-9][0-9][0-9](-?| *)[0-9][0-9][0-9][0-9]$' phone.txt	# 0000 0000, 00000000, 0000    0000

# {} 를 사용한 반복 횟수 지정
# egrep -h '^[0-9]{4}(-?| *)[0-9]{4}$' phone.txt	# 0000 0000, 00000000, 0000    0000
# egrep -h '^[0-9]{3,4}(-?| *)[0-9]{4}$' phone.txt	# 0000 0000, 00000000, 0000    0000

















